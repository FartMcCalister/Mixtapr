{"site":{"title":"","description":null,"enableMobile":true,"websiteUrl":null,"faviconPath":null,"thumbnailSocialPath":null,"descriptionSocial":null,"titleSocial":null,"lang":"","width":1200,"headUser":"","headStyle":"  html {\r\n    margin:0;\r\n    padding:0;\r\n    height:100%;\r\n  }\r\n  \r\n  /* Specific to Tape Maker */\r\n  \r\n  body {\r\n    /*background-color: #1f475a;*/\r\n    background-color: #3a3a3a;\r\n    background-repeat: repeat-x;\r\n    margin:0;\r\n    padding:0;\r\n    height:100%;\r\n  }\r\n  \r\n  /* formatting for settings */\r\n  \r\n  .padded10 {\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .splitSection {\r\n    width: 975px;\r\n    padding: 5px;\r\n    margin: 20px 5px 5px 5px;\r\n    min-height: 400px;\r\n  }\r\n  \r\n  /* formatting for table */\r\n  \r\n  #fileListSection th:first-of-type + th {\r\n    text-align: left;\r\n  }\r\n  \r\n  #fileListSection td:first-of-type + td, #fileListSection th:first-of-type + th {\r\n    min-width: 400px;\r\n  }\r\n  \r\n  #fileListSection td:first-of-type {\r\n    min-width: 20px;\r\n    max-width: 20px;\r\n  }\r\n  \r\n  #fileListSection td:first-of-type + td + td {\r\n    min-width: 50px;\r\n    text-align: right;\r\n  }\r\n  \r\n  #fileListSection td:first-of-type + td + td + td {\r\n    min-width: 50px;\r\n    text-align: right;\r\n  }\r\n  \r\n  #resultSideA {\r\n    max-width: 455px;\r\n    float: left;\r\n    min-height: 250px;\r\n  }\r\n  \r\n  #resultSideB {\r\n    max-width: 455px;\r\n    float: right;\r\n    min-height: 250px;\r\n  }\r\n\r\n  .trackListingTable td:first-of-type, .trackListingTable th:first-of-type {\r\n    min-width: 40px;\r\n    max-width: 40px;\r\n  }\r\n  \r\n  .trackListingTable th:first-of-type + th {\r\n    text-align: left;\r\n  }\r\n  \r\n  .trackListingTable td:first-of-type + td, .trackListingTable th:first-of-type + th {\r\n    min-width: 340px;\r\n    max-width: 340px;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n  }\r\n  \r\n  .trackListingTable td:first-of-type + td + td {\r\n    min-width: 50px;\r\n    text-align: right;\r\n  }\r\n  \r\n  /*\r\n  .trackListingTable img:first-of-type, .trackListingTable img:last-of-type {\r\n    opacity: 0;\r\n  }\r\n  */\r\n  \r\n  .upArrow {\r\n    \r\n  }\r\n  \r\n  .downArrow {\r\n    \r\n  }\r\n  \r\n  #optimize {\r\n    margin: 20px;\r\n    padding: 5px 20px;\r\n    color: blue;\r\n  }\r\n  \r\n  \r\n  .xButton {\r\n    font-weight: bold;\r\n    color: red;\r\n    font-size: 11px;\r\n    width: 23px;\r\n  }\r\n  \r\n  .playButton {\r\n    font-weight: bold;\r\n    color: green;\r\n    font-size: 11px;\r\n  }\r\n  \r\n  .tapelogo {\r\n    image-rendering: pixelated;\r\n    position: absolute;\r\n    top: 62px;\r\n    margin-left: 845px;\r\n  }\r\n  \r\n  .timer {\r\n    position: relative;\r\n    bottom: 5px;\r\n    left: 15px;\r\n  }\r\n  \r\n  .tapeControls {\r\n    float: right;\r\n    margin-right: 50px;\r\n    margin-top: 5px;\r\n  }\r\n  \r\n  #tapeSizeBar {\r\n    \r\n  }\r\n  \r\n  #tapeFilledBar {\r\n    \r\n  }\r\n  \r\n  .progressBar {\r\n    height: 15px;\r\n    width: 300px;\r\n    padding: 2px;\r\n    background-color: #ffffff;\r\n    border: 2px solid black;\r\n    float: left;\r\n    margin-top: 5px;\r\n    margin-bottom: 15px;\r\n  }\r\n  \r\n  .filledBar {\r\n    height: 15px;\r\n    width: 0px;\r\n    background-color: #f2166a;\r\n  }\r\n  \r\n  .barPosition {\r\n    width: 2px;\r\n    height: 22px;\r\n    background-color: black;\r\n    float: left;\r\n    margin-top: -6px;\r\n  }\r\n  \r\n  /* Junk from previous projects */\r\n  \r\n  @media (pointer:none), (pointer:coarse) {\r\n    .forceLeft {\r\n      display: none;\r\n    }\r\n    \r\n    .titles {\r\n      margin: 0 auto;\r\n      width: 90%;\r\n    }\r\n    \r\n    .centerimg {\r\n      display: block;\r\n      margin-left: auto;\r\n      margin-right: auto;\r\n      width: 98%;\r\n    }\r\n    \r\n    .wrapper {\r\n      min-width: 1273px;\r\n    }\r\n    \r\n    .wplist ul {\r\n      width: initial !important;\r\n    }\r\n  }\r\n  \r\n  /*\r\n  @media (pointer:fine) and (max-width: 1557px) {\r\n    .titles {\r\n      padding-left: 272px;\r\n    }\r\n    \r\n    .section {\r\n      margin: 20px 5px 5px 5px !important;\r\n    }\r\n  }\r\n  \r\n  \r\n  @media (pointer:fine) and (max-width: 1920px) {\r\n    .forceLeft {\r\n      opacity: 65%;\r\n    }\r\n    \r\n    .titles {\r\n      padding-left: 272px;\r\n    }\r\n    \r\n    .section {\r\n      margin: 20px 5px 5px 5px !important;\r\n    }\r\n  }*/\r\n  \r\n  .forceLeft {\r\n    opacity: 65%;\r\n  }\r\n  \r\n  .titles {\r\n    padding-left: 272px;\r\n  }\r\n  \r\n  .section {\r\n    margin: 20px 5px 5px 5px !important;\r\n  }\r\n  \r\n  .titles {\r\n    /*padding: 0px 205px;*/\r\n  }\r\n  \r\n  .section.wp {\r\n    /*width: 601px;*/\r\n    /*margin-left: 380px;*/\r\n  }\r\n  \r\n  .wp a:link {\r\n    color: #3000cd;\r\n  }\r\n  \r\n  .wp a:visited {\r\n    color: #3000cd;\r\n  }\r\n  \r\n  .colorpicker {\r\n    width: 75px;\r\n    height: 25px;\r\n    margin-top: 5px;\r\n  }\r\n  \r\n  .bannertext {\r\n    padding-top: 30px;\r\n    text-align: center;\r\n    height: 80px;\r\n  }\r\n  \r\n  .bannerdesc {\r\n    text-align: center;\r\n    color: #16161d;\r\n  }\r\n  \r\n  .wptitle {\r\n    font-size: 200%;\r\n    font-weight: bold;\r\n    padding-left: 10px;\r\n    padding-top: 5px;\r\n  }\r\n  \r\n  .wpdesc {\r\n    width: 95%;\r\n    font-size: 100%;\r\n    padding-left: 15px;\r\n    padding-top: 7px;\r\n    padding-bottom: 7px;\r\n    font-family: monospace;\r\n  }\r\n  \r\n  .wplist {\r\n    font-size: 150%;\r\n    font-family: monospace;\r\n    font-weight: bold;\r\n    margin: 0 auto;\r\n  }\r\n  \r\n  .wplist a:link {\r\n    color: #3888d0;\r\n    text-decoration: none;\r\n  }\r\n  \r\n  .wplist a:hover {\r\n    color: #FFDD00;\r\n    text-decoration: none;\r\n  }\r\n  /*\r\n  .wplist img:hover {\r\n    box-shadow: 0 0 1500px #305cd0;\r\n  }\r\n  */\r\n  .wplist li {\r\n    padding-top: 100px;\r\n    padding-bottom: 200px;\r\n  }\r\n  \r\n  .wplist ul {\r\n    padding-left: 0;\r\n    list-style-type: none;\r\n    width: 1400px;\r\n    margin: 0 auto;\r\n  }\r\n  \r\n  .wpimg {\r\n    padding-left: 25px;\r\n  }\r\n  \r\n  .centerimg {\r\n    display: block;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    width: 95%;\r\n  }\r\n  \r\n  .wplabel {\r\n    width: 23%;\r\n    background-color: grey;\r\n    margin-bottom: 5px;\r\n    padding-left: 4px;\r\n  }\r\n  \r\n  select[disabled] {\r\n    pointer-events: none;\r\n  }\r\n  \r\n  .content {\r\n    padding-bottom: 100px;\r\n    padding-top: 30px;\r\n    /* padding-left: 5px; */\r\n  }\r\n  \r\n  .footer {\r\n\t  height: 85px;\r\n\t  position: absolute;\r\n\t  bottom: 0px;\r\n\t  left: 0px;\r\n    font-family: monospace;\r\n    width: 100%;\r\n    min-width: 1273px;\r\n    margin-top: 61px;\r\n    background: linear-gradient(#7d7d7d, #444444);\r\n  }\r\n  \r\n  .footer > div {\r\n    width: 975px;\r\n    margin-left: 270px;\r\n  }\r\n  \r\n  .footer > div > .dcopelogo {\r\n    position: absolute;\r\n    left: 1170px;\r\n    top: 29px;\r\n  }\r\n  \r\n  .footer div div:first-of-type {\r\n    font-weight: bold;\r\n    margin-bottom: 3px;\r\n    padding-left: 3px;\r\n  }\r\n  \r\n  .footer div div:first-of-type +div {\r\n    font-weight: bold;\r\n    font-size: 85%;\r\n    margin-bottom: 3px;\r\n    padding-left: 15px;\r\n    font-family: monospace;\r\n  }\r\n  \r\n  .footer div div:first-of-type +div + div {\r\n    font-weight: bold;\r\n    font-size: 90%;\r\n    padding-left: 40px;\r\n  }\r\n  \r\n  .wrapper {\r\n\t  min-height:100%;\r\n\t  position:relative;\r\n  }\r\n  \r\n  .mask > div {\r\n    z-index: 5;\r\n    position: absolute;\r\n    background: black;\r\n    opacity: 0.6;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n  }\r\n  \r\n  .mask .masktop {\r\n    top: 0;\r\n    /*bottom: 0;*/\r\n    left: 0;\r\n    right: 0;\r\n  }\r\n  \r\n  .mask .maskleft {\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    /*right: 0;*/\r\n  }\r\n  \r\n  .mask .maskright {\r\n    top: 0;\r\n    bottom: 0;\r\n    /*left: 0;*/\r\n    right: 0;\r\n  }\r\n  \r\n  .mask .maskbottom {\r\n    /*top: 0;*/\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n  }\r\n  \r\n  #loadingBox {\r\n    z-index: 5;\r\n    position: absolute;\r\n    background: black;\r\n    opacity: 0.6;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n  }\r\n  \r\n  .mouseOverHighlight {\r\n    color: blue;\r\n    background-color: #92ffe4;\r\n  }\r\n  \r\n  .mouseOverHighlight.red {\r\n    color: red;\r\n    background-color: #fff058;\r\n  }\r\n  \r\n  .hl, .hl > td {\r\n    z-index: 6;\r\n    position: relative;\r\n    background-color: inherit;\r\n    /*box-shadow: 0px 0px 110px 35px #3a3a3a;*/\r\n  }\r\n  \r\n  .overlay {\r\n    z-index: 5;\r\n    position: fixed;\r\n    background: black;\r\n    opacity: 0.6;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n  }\r\n  \r\n  .popup {\r\n    z-index: 7;\r\n    position: fixed;\r\n    background: white;\r\n    opacity: 0.9;\r\n    top: 199px;\r\n    right: 15px;\r\n    width: 595px;\r\n    /*height: 400px;*/\r\n    border-radius: 3px;\r\n  }\r\n  \r\n  .helpTitle {\r\n    font-weight: bold;\r\n    font-size: 150%;\r\n    padding: 20px;\r\n    color: #1f475a;\r\n  }\r\n  \r\n  .helpContent {\r\n    /*font-weight: bold;*/\r\n    padding-left: 20px;\r\n    padding-right: 20px;\r\n    padding-bottom: 20px;\r\n    color: #1f475a;\r\n  }\r\n  \r\n  .blockTypePopup {\r\n    z-index: 7;\r\n    position: fixed;\r\n    background: white;\r\n    opacity: 0.9;\r\n    top: 210px;\r\n    left: 500px;\r\n    width: 595px;\r\n    height: 315px;\r\n    border-radius: 3px;\r\n    text-align: center;\r\n    border-color: #FFCC00;\r\n    border-style: solid;\r\n    border-width: 4px;\r\n  }\r\n  \r\n  .deletePopup {\r\n    z-index: 7;\r\n    position: fixed;\r\n    background: white;\r\n    opacity: 0.9;\r\n    top: 210px;\r\n    left: 500px;\r\n    width: 595px;\r\n    height: 250px;\r\n    border-radius: 3px;\r\n    text-align: center;\r\n    border-color: red;\r\n    border-style: solid;\r\n    border-width: 4px;\r\n  }\r\n  \r\n  .deleteTitle {\r\n    font-weight: bold;\r\n    font-size: 150%;\r\n    padding: 20px;\r\n    color: black;\r\n  }\r\n  \r\n  .deleteContent {\r\n    font-weight: bold;\r\n    padding-left: 20px;\r\n    padding-right: 20px;\r\n    padding-bottom: 15px;\r\n    color: black;\r\n  }\r\n  \r\n  .confirmDelete {\r\n    text-align: center;\r\n    padding-top: 15px;\r\n    padding-bottom: 15px;\r\n  }\r\n  \r\n  .actualDeleteButton {\r\n    color: red;\r\n    font-size: 150%;\r\n    width: 60%;\r\n    border-color: red;\r\n  }\r\n  \r\n  .cancelDeleteButton {\r\n    color: blue;\r\n    font-size: 150%;\r\n    width: 60%;\r\n    border-color: blue;\r\n  }\r\n  \r\n  .helpX {\r\n    position: absolute;\r\n    top: 0px;\r\n    right: 4px;\r\n    font-weight: bold;\r\n    font-size: 150%;\r\n    color: black;\r\n  }\r\n  \r\n  #stage1 {\r\n    background-color: inherit;\r\n  }\r\n\r\n  .section {\r\n    padding: 5px;\r\n    margin: 5px;\r\n    border: 1px;\r\n    border-style: solid;\r\n    border-radius: 3px;\r\n    border-color: #000000;\r\n   /* background-color: #e9fdff;*/\r\n    background-color: #cecece;\r\n    width: 975px;\r\n    font-family: sans-serif;\r\n    box-shadow: 2px 3px 11px -3px #000000;\r\n   /* margin-left: calc(50% - 500px);\r\n    margin-left: 281px;*/\r\n    margin: 0 auto;\r\n    margin-top: 20px;\r\n  }\r\n  \r\n  .section:first-of-type {\r\n    margin-top: 24px;\r\n  }\r\n\r\n  .data_table td:first-of-type {\r\n    padding: 3px;\r\n    text-align: center;\r\n    width: 50px;\r\n  }\r\n\r\n  .data_table td:first-of-type + td {\r\n    padding: 3px;\r\n    text-align: right;\r\n    width: 201px;\r\n  }\r\n\r\n  .data_table td:first-of-type + td + td {\r\n    padding: 3px;\r\n    text-align: center;\r\n    width: 150px;\r\n  }\r\n\r\n  .data_table td:first-of-type + td + td + td, .data_table td:first-of-type + td + td + td + td {\r\n    padding: 3px;\r\n    width: 151px;\r\n    font-size: 90%;\r\n    cursor: default;\r\n    color: grey;\r\n    text-align: left;\r\n  }\r\n\r\n  .table_labels {\r\n    font-weight: bold;\r\n    padding: 1px 10px;\r\n    cursor: default;\r\n  }\r\n\r\n  .inputbox {\r\n    width: 150px;\r\n  }\r\n\r\n  .inputbox[type=checkbox] {\r\n    width: 50px;\r\n  }\r\n\r\n  #result {\r\n    font-size: 120%;\r\n    min-height: 23px;\r\n  }\r\n\r\n  table {\r\n    border-collapse: collapse;\r\n    /*background-color: #b9f9ff;*/\r\n  }\r\n\r\n  table, th, tr, td {\r\n    /*\r\n    border-top: 1px solid #c3c3c3;\r\n    border-bottom: 1px solid #c3c3c3;\r\n    border-left: 1px solid #c3c3c3;\r\n    border-right: 1px solid #c3c3c3;\r\n    */\r\n  }\r\n  \r\n  td:first-of-type {\r\n    width: 150px;\r\n  }\r\n  \r\n  td:first-of-type > div{\r\n    width: 150px;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n  }\r\n  \r\n  td:first-of-type + td + td{\r\n    min-width: 132px;\r\n  }\r\n  \r\n  td:first-of-type + td input[type=\"text\"], input.multiselect{\r\n    width: 66px;\r\n    /*width: 104px;*/\r\n  }\r\n  \r\n  .helpboxdata {\r\n    position: absolute;\r\n    min-width: 350px;\r\n    min-height: 200px;\r\n    /*margin-left: 60px;*/\r\n    background-color: #fdfdfd;\r\n    text-align: left;\r\n    border: 1px solid #7A9CD3;\r\n    left: -386px;\r\n    opacity: 0.95;\r\n    top: 76px;\r\n    z-index: 2;\r\n  }\r\n  \r\n  .multiselectdata {\r\n    position: absolute;\r\n    min-width: 68px;\r\n    margin-left: 42px;\r\n    background-color: #fdfdfd;\r\n    text-align: left;\r\n    border: 1px solid #7A9CD3;\r\n  }\r\n  \r\n  .propertyset .multiselectdata {\r\n    margin-left: 59px;\r\n  }\r\n  \r\n  .blocktable {\r\n    min-width: 606px;\r\n  }\r\n  \r\n  .blocktable td.multiselectdata {\r\n    width: 147px;\r\n    background-color: #fdfdfd;\r\n    text-align: left;\r\n  }\r\n  \r\n  .blocktable .multiselectdata .multiselectOption {\r\n    width: 100%;\r\n    text-align: left;\r\n    font-weight: initial;\r\n    color: black;\r\n    font-size: 100%;\r\n    height: initial;\r\n    line-height: initial;\r\n    cursor: default;\r\n  }\r\n  \r\n  .blocktable .multiselectdata .multiselectOption {\r\n    height: 15px;\r\n    font: 13.3333px Arial;\r\n    -webkit-touch-callout: none;\r\n    -webkit-user-select: none;\r\n    -khtml-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n  }\r\n  \r\n  .blocktable .multiselectdata .multiselectOption.selected {\r\n    color: white;\r\n    background-color: #328EFE;\r\n  }\r\n  \r\n  .blocktable .multiselectdata .multiselectOption:hover {\r\n    color: white;\r\n    background-color: #227EFE;\r\n  }\r\n  \r\n  .checkboxbutton, .resultsetbutton {\r\n    /*color: #8f8f8f;*/\r\n    color: #5f5f5f;\r\n    font-size: 90%;\r\n    height: 21px;\r\n    line-height: 1px;\r\n    padding: 0px 6px;\r\n  }\r\n  \r\n  button {\r\n    font-weight: bold;\r\n    font-size: 130%;\r\n  }\r\n\r\n  .selected {\r\n    color: blue;\r\n    border-color: blue;\r\n  }\r\n\r\n  .invalidproduct > td {\r\n    background-color: #e0e0e0;\r\n    color: #c0c0c0;\r\n  }\r\n\r\n  .invalidproduct > td > button.selected {\r\n    color: #8f8f8f;\r\n    border-color: grey;\r\n  }\r\n  \r\n  button.invalidproduct{\r\n    color: #8f8f8f;\r\n    border-color: grey;\r\n  }\r\n\r\n  #copy, #generate {\r\n    /*margin: 0 auto;*/\r\n    margin-top: 10px;\r\n    margin-left: 5px;\r\n    width: 285px;\r\n    display: block;\r\n  }\r\n  \r\n  #copy {\r\n    color: #0041FF;\r\n  }\r\n\r\n  .signed {\r\n    width: 127px;\r\n    float: right;\r\n  }\r\n\r\n  .sign {\r\n    font-weight: bold;\r\n    text-align: center;\r\n    float: left;\r\n    padding-top: 2px;\r\n    width: 17px;\r\n    height: 17px;\r\n    color: blue;\r\n    -webkit-touch-callout: none;\r\n    -webkit-user-select: none;\r\n    -khtml-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n  }\r\n\r\n  .red {\r\n    color: red;\r\n  }\r\n  \r\n  .orange {\r\n    color: orange;\r\n  }\r\n  \r\n  .green {\r\n    color: green;\r\n  }\r\n  \r\n  .blue {\r\n    color: blue;\r\n  }\r\n\r\n  .grey {\r\n    color: grey;\r\n  }\r\n\r\n  .small {\r\n    font-size: 85%;\r\n  }\r\n  \r\n  .medium{\r\n    font-size: 165%;\r\n  }\r\n  \r\n  .large{\r\n    font-size: 200%;\r\n  }\r\n  \r\n  .giant{\r\n    font-size: 400%;\r\n  }\r\n\r\n  .bold {\r\n    font-weight: bold;\r\n  }\r\n\r\n  .center {\r\n    text-align: center;\r\n  }\r\n  \r\n  .left {\r\n    float: left;\r\n  }\r\n  \r\n  .right {\r\n    float: right;\r\n  }\r\n  \r\n  .major {\r\n    background-color: #FFFFFF;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .unselectable, button, .darkrow {\r\n    -webkit-touch-callout: none;\r\n    -webkit-user-select: none;\r\n    -khtml-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n    cursor: default;\r\n  }\r\n\r\n  ul {\r\n    padding-left: 30px;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  li {\r\n    margin-top: 5px;\r\n    margin-bottom: 5px;\r\n  }\r\n  \r\n  .deleteButton {\r\n    width: 70px;\r\n    font-size: 80%;\r\n    margin-right: 4px;\r\n  }\r\n  \r\n  .deleteButton:hover {\r\n    color: red;\r\n  }\r\n  \r\n  .removeButton {\r\n    float: right;\r\n    margin-top: 25px;\r\n    padding: 2px;\r\n  }\r\n  \r\n  .appendButton:hover, .firstBlockButton:hover {\r\n    color: #41CA4F;\r\n  }\r\n  \r\n  .buttonlabel {\r\n    width: 50px;\r\n    padding-left: 1.3px;\r\n    padding-right: 4px;\r\n    display: inline-block;\r\n  }\r\n  \r\n  .appendButton {\r\n    /*margin: 0 auto;*/\r\n    /*margin: 0px 25px;*/\r\n    /*margin-top: 16px;*/\r\n    width: 145px;\r\n    font-size: 80%;\r\n    display: inline-block;\r\n    margin-right: 4px;\r\n  }\r\n  \r\n  .firstBlockButton {\r\n    width: 145px;\r\n    font-size: 80%;\r\n    display: inline-block;\r\n    margin-right: 4px;\r\n  }\r\n  \r\n  .newchunk {\r\n    padding: 2px;\r\n    width: 173px;\r\n    margin: 0px 25px;\r\n    margin-top: 6px;\r\n    background-color: inherit;\r\n  }\r\n  \r\n  .logicblock {\r\n    padding-top: 8px;\r\n    margin-bottom: 12px;\r\n    background-color: inherit;\r\n  }\r\n  \r\n  .headerButtons {\r\n    padding-bottom: 12px;\r\n    background-color: inherit;\r\n    /*width: 158px;*/\r\n  }\r\n  \r\n  .addButton {\r\n    /*background-color: inherit;*/\r\n    padding-top: 1px;\r\n    background-color: #e9fdff;\r\n    margin-top: 6px;\r\n  }\r\n  \r\n  .resultsection {\r\n    margin-bottom: 100px;\r\n  }\r\n  \r\n  .copysection {\r\n    width: 100%;\r\n    height: 30px;\r\n    padding-bottom: 12px;\r\n  }\r\n  \r\n  .disabled {\r\n    color: #D8D8D8;\r\n  }\r\n  \r\n  .colorbox {\r\n    width: 40px;\r\n  }\r\n  \r\n  .save input {\r\n    width: 116px;\r\n  }\r\n  \r\n  input.blockname, input.groupname {\r\n    width: 188px;\r\n  }\r\n  \r\n  .blockname, .groupname, .blockmenu {\r\n    /*float: right;*/\r\n    /*margin-right: 295px;*/\r\n  }\r\n  \r\n  .blockheaderspan {\r\n    float: right;\r\n    margin-right: 275px;\r\n  }\r\n  \r\n  .blockheader {\r\n    min-width: 603px;\r\n    background-color: #8cbcd2;\r\n    font-weight: bold;\r\n    padding-left: 2px;\r\n  }\r\n  \r\n  .show, .hide {\r\n    margin: 0 auto;\r\n    font-weight: bold;\r\n    color: blue;\r\n  }\r\n  \r\n  .preinstructions {\r\n    width: 670px;\r\n    margin: auto;\r\n    /*font-family: monospace;*/\r\n    font-size: 120%;\r\n    margin-top: 10px;\r\n  }\r\n  \r\n  .instructions {\r\n    font-size: 120%;\r\n    position: absolute;\r\n    top: 137px;\r\n    left: 724px;\r\n  }\r\n  \r\n  .instructions > div{\r\n    font-weight: bold;\r\n    margin: 10px auto;\r\n    font-size: 125%;\r\n  }\r\n  \r\n  .mono {\r\n    font-family: monospace;\r\n  }\r\n  \r\n  select {\r\n    height: 21px;\r\n  }\r\n  \r\n  .chunkpreview {\r\n    height: 15px;\r\n    /*padding: 2px;*/\r\n    font-weight: bold;\r\n    font-size: 70%;\r\n    color: #FFFFFF;\r\n    background-color: #8cbcd2;\r\n    /*padding-left: 6px;*/\r\n  }\r\n  \r\n  .logic {\r\n    max-width: 602px;\r\n    /*background-color: inherit;*/\r\n    background-color: #8cbcd2;\r\n    padding: 2px;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .blockoptions {\r\n    /*margin-top: 2px;*/\r\n    /*margin-bottom: 2px;*/\r\n    max-width: 602px;\r\n    /*background-color: inherit;*/\r\n    background-color: #8cbcd2;\r\n    padding: 2px;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .fieldvalue select {\r\n    width: 70px;\r\n  }\r\n  \r\n  .darkrow {\r\n    background: #8cbcd2;\r\n  }\r\n  \r\n  .hideshow {\r\n    float: right;\r\n    text-align: right;\r\n    font-size: 80%;\r\n    -webkit-touch-callout: none;\r\n    -webkit-user-select: none;\r\n    -khtml-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n    cursor: default;\r\n  }\r\n  \r\n  .hideshow:hover {\r\n    color: blue;\r\n  }\r\n  \r\n  .save {\r\n    float: right;\r\n  }\r\n  \r\n  .help0 {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .sidebyside {\r\n    height: 146px;\r\n  }\r\n  \r\n  .loadsection {\r\n    float: right;\r\n    height: 100%;\r\n    width: 250px;\r\n    margin-top: 5px;\r\n    margin-right: 5px;\r\n  }\r\n  \r\n  #load {\r\n    width: 246px;\r\n  }\r\n  \r\n  .load {\r\n    margin-top: 7px;\r\n  }\r\n  \r\n  .load button {\r\n    /*float: right;\r\n    margin-right: 35px;*/\r\n    margin-left: 10px;\r\n  }\r\n  \r\n  .orsection {\r\n    float: left;\r\n    margin-top: 45px;\r\n    margin-left: 160px;\r\n  }\r\n  \r\n  .new {\r\n    position: relative;\r\n    height: 58px;\r\n  }\r\n  \r\n  .new button {\r\n    float: left;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 35px;\r\n  }\r\n  \r\n  .newsection {\r\n    float: left;\r\n    height: 100%;\r\n    width: 280px;\r\n    margin-top: 5px;\r\n    margin-left: 5px;\r\n  }\r\n  \r\n  .sectiontitle {\r\n    margin-top: 5px;\r\n    margin-left: 5px;\r\n  }\r\n  \r\n  .propertyset textarea {\r\n    margin-bottom: -6px;\r\n    min-width: 386px;\r\n    min-height: 121px;\r\n    position: absolute;\r\n    top: 0px;\r\n    max-width: 386px;\r\n    max-height: 121px;\r\n  }\r\n  \r\n  .propertyset textarea:focus {\r\n    max-width: none;\r\n    max-height: none;\r\n  }\r\n  \r\n  .textareaparent {\r\n    height: 125px;\r\n    position: relative;\r\n  }\r\n  \r\n  label.inlineblock {\r\n    width: 37px;\r\n    text-align: center;\r\n    color: blue;\r\n  }\r\n  \r\n  .inlineblock {\r\n    display: inline-block;\r\n  }\r\n  \r\n  .inlineblock .multiselectdata{\r\n    margin-left: 0px;\r\n  }\r\n  \r\n  .transfer {\r\n    margin-right: 20px;\r\n  }\r\n  \r\n  .transfer button {\r\n    width: 52px;\r\n  }\r\n  \r\n  label.tolabel {\r\n    margin: 0px 3px;\r\n    text-align: center;\r\n  }\r\n  \r\n  .logic .logicButtonSmall button {\r\n    width: 40px;\r\n  }\r\n  \r\n  .logic .logicButtonLarge button {\r\n    width: 82px;\r\n  }\r\n  \r\n  .thisGridButton, .allowMissingBlocks {\r\n    width: 221px;\r\n  }\r\n  \r\n  .thisGridName {\r\n    width: 91px;\r\n    margin-left: 5px;\r\n  }\r\n  \r\n  .settings {\r\n    height: 400px;\r\n    background-color: inherit;\r\n  }\r\n  \r\n  .settings div {\r\n    float: right;\r\n    margin-top: 5px;\r\n    width: 100%;\r\n  }\r\n  \r\n  .settings > div:first-of-type {\r\n    float: inherit;\r\n  }\r\n  \r\n  .settingslabel {\r\n    float: left;\r\n  }\r\n  \r\n  .forceLeft {\r\n    position: fixed;\r\n    top: 4px;\r\n    margin: 0;\r\n    width: 250px;\r\n  }\r\n  \r\n  .forceLeft .section{\r\n    width: 250px;\r\n    margin: 20px 0 0 0 !important;\r\n  }\r\n  \r\n  .pseudocode div{\r\n    font-weight: bold;\r\n    font-size: 60%;\r\n  }\r\n  \r\n  .pseudocode div:first-of-type {\r\n    font-size: 100%;\r\n  }\r\n  \r\n  .infolink:after {\r\n    content: '?';\r\n    display: inline-block;\r\n    font-family: sans-serif;\r\n    font-weight: bold;\r\n    text-align: center;\r\n    width: 1.8ex;\r\n    height: 1.8ex;\r\n    font-size: 1.4ex;\r\n    line-height: 1.9ex;\r\n    border-radius: 1.2ex;\r\n    margin-right: 4px;\r\n    margin-left: 4px;\r\n    padding: 1px;\r\n    color: blue;\r\n    background: white;\r\n    border: 1px solid blue;\r\n    text-decoration: none;\r\n  }\r\n\r\n  .infolink:hover:before {\r\n    color: white;\r\n    background: blue;\r\n    border-color: white;\r\n    text-decoration: none;\r\n  }\r\n  \r\n  .errors {\r\n    position: relative;\r\n    color: #f74343;\r\n    left: 1000px;\r\n    height: 0px;\r\n    width: 0px;\r\n    white-space: nowrap;\r\n  }\r\n  \r\n  .errorsection {\r\n    color: red;\r\n    margin-left: 15px;\r\n    margin-top: 5px;\r\n  }\r\n  \r\n  .version {\r\n    color: #4064b3;\r\n    position: absolute;\r\n    top: 139px;\r\n    left: 1161px;\r\n    white-space: nowrap;\r\n  }\r\n  \r\n  .precision {\r\n    width: 45px;\r\n    margin-right: 4px;\r\n  }\r\n  \r\n  .precisionspan {\r\n    float: right;\r\n    margin-right: 2px;\r\n  }\r\n  \r\n  .section.topbanner {\r\n    margin-top: 0px !important;\r\n    padding-top: 0px !important;\r\n  }\r\n  \r\n  .banner {\r\n    margin-left: -6px;\r\n    margin-top: -6px;\r\n    height: 148px;\r\n  }\r\n  \r\n  .dcopelogo {\r\n    position: absolute;\r\n    top: 42px;\r\n    margin-left: 14px;\r\n  }\r\n\r\n  /* unvisited link */\r\n  a:link {\r\n    color: #4064b3;\r\n  }\r\n\r\n  /* visited link */\r\n  a:visited {\r\n    color: #4064b3;\r\n  }\r\n\r\n  /* mouse over link */\r\n  a:hover {\r\n    color: #4064b3;\r\n  }\r\n\r\n  /* selected link */\r\n  a:active {\r\n    color: #4064b3;\r\n  }\r\n  \r\n  a:link {\r\n    text-decoration: none;\r\n  }\r\n\r\n  a:visited {\r\n    text-decoration: none;\r\n  }\r\n\r\n  a:hover {\r\n    text-decoration: underline;\r\n  }\r\n\r\n  a:active {\r\n    text-decoration: underline;\r\n  }\r\n  \r\n  .footer a:link {\r\n    color: #0006ff;\r\n  }\r\n\r\n  /* visited link */\r\n  .footer a:visited {\r\n    color: #0006ff;\r\n  }\r\n\r\n  /* mouse over link */\r\n  .footer a:hover {\r\n    color: #FFDD00;\r\n  }\r\n\r\n  /* selected link */\r\n  .footer a:active {\r\n    color: #FFDD00;\r\n  }\r\n","headScript":"$(document).ready(function(){\r\n  $('#results').hide();\r\n  $('#optimize').hide();\r\n  \r\n  /*document.getElementById('fileInput').addEventListener('change', function(){\r\n\r\n    // Obtain the uploaded file, you can change the logic if you are working with multiupload\r\n    var file = this.files[0];\r\n    \r\n    // Create instance of FileReader\r\n    var reader = new FileReader();\r\n\r\n    // When the file has been succesfully read\r\n    reader.onload = function (event) {\r\n\r\n      // Create an instance of AudioContext\r\n      var audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n\r\n      // Asynchronously decode audio file data contained in an ArrayBuffer.\r\n      audioContext.decodeAudioData(event.target.result, function(buffer) {\r\n        // Obtain the duration in seconds of the audio file (with milliseconds as well, a float value)\r\n        var duration = buffer.duration;\r\n\r\n        // example 12.3234 seconds\r\n        //console.log(\"The duration of the song is \" + duration + \" seconds\");\r\n        // Alternatively, just display the integer value with\r\n        // parseInt(duration)\r\n        // 12 seconds\r\n      });\r\n    };\r\n\r\n    // In case that the file couldn't be read\r\n    reader.onerror = function (event) {\r\n      console.error(\"An error ocurred reading the file: \", event);\r\n    };\r\n\r\n    // Read file as an ArrayBuffer, important !\r\n    reader.readAsArrayBuffer(file);\r\n  }, false);*/\r\n  \r\n  \r\n  function Track (file) {\r\n    this.file = file;\r\n    this.name = file.name.replace(/\\.[A-Za-z0-9]+$/, '');\r\n    this.duration = 0.0;\r\n    //this.title = \"\";\r\n    \r\n    populateMetaData(this);\r\n  }\r\n  \r\n  var audioFiles = [];\r\n  var secondsSideA = parseInt($('#minutesSideA').val()*100) * 60 / 100;\r\n  var secondsSideB = parseInt($('#minutesSideA').val()*100) * 60 / 100;\r\n  var secondsSilence = 0;\r\n  var minimumSilence = 0.1;  // minimum 0.1s delay between songs for fixing timing inaccuracies\r\n  var secondsPaddingStart = 0;\r\n  var secondsPaddingEnd = 0;\r\n  var solutionThreshold = 2;\r\n  \r\n  var bestSolution = new Solution();\r\n  var ignoreStupidSolutions = true;\r\n  var maxTrackCount = 0;\r\n  var minTrackCount = 0;\r\n  \r\n  var audioElement = document.createElement('audio');\r\n  var currentlyPlaying = -1;\r\n  \r\n  var isPlayingSide = false; // true when playing whole side\r\n  var currentSide = \"\";      // A or B when playing a side, empty when not playing\r\n  var currentTrack = 0;      // increments by 1 for each track played when playing whole side\r\n  var currentFillWidth = 0;  // number of pixels for the width of the filled side being played now\r\n  var startTime = 0;         // stores start time of playing side\r\n  var sideA = [];            // list of tracks on side A\r\n  var sideB = [];            // list of tracks on side B\r\n  var sideTracks = [];       // set to list of current tracks (either A or B)\r\n  var timesSideA = [];       // start times of tracks A\r\n  var timesSideB = [];       // start times of tracks B\r\n  var times = [];            // start times of current tracks (either A or B)\r\n  var currentTimeOffset = 0; // difference in current position vs expected position, used to tweak wait times between songs\r\n  var endTimeA = 0;          // seconds after start that side A should end\r\n  var endTimeB = 0;          // seconds after start that side B should end\r\n  var endTime = 0;           // seconds after start that played side should end\r\n  \r\n  \r\n  // uploads all files selected in the file chooser\r\n  // does not remove existing files\r\n  // does not add duplicate files\r\n  upload = function () {\r\n    // clear list of files\r\n    //audioFiles = [];\r\n    \r\n    var fileInput = $('#fileInput')[0];\r\n\r\n    // files is a FileList object (similar to NodeList)\r\n    var files = fileInput.files;\r\n\r\n    // loop through files\r\n    for (var i = 0; i < files.length; i++) {\r\n      addFile(files[i]);\r\n    }\r\n    \r\n    refreshDisplayedFiles();\r\n  };\r\n  \r\n  // adds a file to the list if not already there\r\n  addFile = function (file) {\r\n\tif(file.type.startsWith('audio/')) {\r\n\t\tconsole.log(\"Uploading: \" + file.name);\r\n    //if(file.type == \"audio/wav\" || file.type == \"audio/mpeg\" || file.type == \"audio/flac\" || file.type == \"audio/x-flac\") {\r\n      if(!hasTrack(file)) {\r\n        audioFiles.push(new Track(file));\r\n      }\r\n      else {\r\n        console.log(\"Skipping upload of duplicate track: \" + file.name);\r\n      }\r\n    }\r\n  };\r\n  \r\n  // returns true if there is already a file in the list with the same file name\r\n  hasTrack = function (file) {\r\n    var found = false;\r\n    $.each(audioFiles, function (i, data) {\r\n      if(data.file.name == file.name) {\r\n        found = true;\r\n      }\r\n    });\r\n    return found;\r\n  };\r\n  \r\n  // removes an uploaded track by index\r\n  // hides solution\r\n  // TODO: see if possible to preserve solution if removed track wasn't used\r\n  removeTrack = function (index) {\r\n    audioFiles.splice(index, 1);\r\n    refreshDisplayedFiles();\r\n    clearSolution();\r\n    $('#results').hide();\r\n  };\r\n  \r\n  // builds the list of files\r\n  refreshDisplayedFiles = function () {\r\n    $('#fileListSection').empty();\r\n    var header = \"<tr><th></th><th>Track Name</th><th>Duration</th><th></th><th></th></tr>\";\r\n    $('#fileListSection').append(header);\r\n    \r\n    var readyToOptimize = true;\r\n    \r\n    $.each(audioFiles, function (i, data) {\r\n      if(data.duration == 0) {\r\n        readyToOptimize = false;\r\n      }\r\n      var dur = formatTimeDecimal(data.duration);\r\n      var remove = \"<button class='xButton' onclick='removeTrack(\"+i+\")'>X</button>\";\r\n      var row = \"<tr><td id='control\"+i+\"'>\"+buildPlayButtonImage(i)+\"</td><td>\"+data.name+\"</td><td>\"+dur+\"</td><td>\"+remove+\"</td></tr>\";\r\n      $('#fileListSection').append(row);\r\n    });\r\n    \r\n    if(audioFiles.length > 0 && readyToOptimize) {\r\n      $('#optimize').show();\r\n    }\r\n    else {\r\n      $('#optimize').hide();\r\n    }\r\n  };\r\n  \r\n  /*\r\n  var optimizeCheck = setInterval(function () {\r\n    if($('#fileListSection').is(':visible') && !isPlayingSide) {\r\n      if(audioFiles.length > 0) {\r\n        var uninitializedFiles = false;\r\n        $.each(audioFiles, function (i, data) {\r\n          if(data.duration == 0 || data.duration == null) {\r\n            // some file not initialized yet\r\n            uninitializedFiles = true;\r\n          }\r\n        });\r\n        if(!uninitializedFiles) {\r\n          // all files are initialized\r\n          $('#optimize').show();\r\n        }\r\n        else {\r\n          // at least one file not yet initialized\r\n          $('#optimize').hide();\r\n        }\r\n      }\r\n      else {\r\n        // no files to optimize yet\r\n        $('#optimize').hide();\r\n      }\r\n    }\r\n  }, 1000);*/\r\n  \r\n  // common function to build the image button that changes from play to stop for each track\r\n  buildPlayButtonImage = function (index) {\r\n    return \"<img src='play_button_green3.png' alt='play' onclick='clickPlayTrack(\"+index+\");' style='padding-top:3px;width:15px;height:15px;'>\";\r\n  };\r\n  \r\n  // common function to build the image button that changes from play to stop for each track\r\n  buildStopButtonImage = function (index) {\r\n    return \"<img src='stop_button_red3.png' alt='stop' onclick='clickStopPlaying();' style='padding-top:3px;width:15px;height:15px;'>\";\r\n  };\r\n  \r\n  buildUpArrowImage = function (index, invisible) {\r\n    return \"<img src='up_arrow3.png' alt='up' onclick='moveTrackUp(\"+index+\")' style='padding-top:3px;width:15px;height:15px;\"+(invisible?\"opacity:0;\":\"\")+\"'>\";\r\n  };\r\n  \r\n  buildDownArrowImage = function (index, invisible) {\r\n    return \"<img src='down_arrow3.png' alt='up' onclick='moveTrackDown(\"+index+\")' style='padding-top:3px;width:15px;height:15px;\"+(invisible?\"opacity:0;\":\"\")+\"'>\";\r\n  };\r\n  \r\n  populateMetaData = function (track) {\r\n    // Create instance of FileReader\r\n    var reader = new FileReader();\r\n\r\n    // When the file has been succesfully read\r\n    reader.onload = function (event) {\r\n\r\n      // Create an instance of AudioContext\r\n      var audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n\r\n      // Asynchronously decode audio file data contained in an ArrayBuffer.\r\n      audioContext.decodeAudioData(event.target.result, function(buffer) {\r\n        // Obtain the duration in seconds of the audio file (with milliseconds as well, a float value)\r\n        var duration = buffer.duration;\r\n        \r\n        track.duration = duration;\r\n        refreshDisplayedFiles();\r\n        \r\n        //var metadata = AudioMetadata.ogg(event.target.result);\r\n        //track.title = metadata.title;\r\n        //refreshDisplayedFiles();\r\n\r\n        // example 12.3234 seconds\r\n        // console.log(\"The duration of the song is \" + duration + \" seconds\");\r\n        // Alternatively, just display the integer value with\r\n        // parseInt(duration)\r\n        // 12 seconds\r\n      });\r\n    };\r\n    \r\n    // Read in the file which triggers the onload above\r\n    reader.readAsArrayBuffer(track.file);\r\n  };\r\n  \r\n  formatTime = function (seconds) {\r\n    var pad = \"\";\r\n    if(Math.round(seconds % 60) < 10) {\r\n      pad = \"0\";\r\n    }\r\n    return Math.floor(seconds / 60) + \":\" + pad + Math.round(seconds % 60);\r\n  };\r\n  \r\n  formatTimeDecimal = function (seconds) {\r\n    var pad = \"\";\r\n    var decimalPad = \"\";\r\n    var minutes = Math.floor(seconds / 60);\r\n    var roundedSeconds = Math.round((seconds % 60) * 100)/100;\r\n    if(roundedSeconds == 60) {\r\n      roundedSeconds = 0;\r\n      minutes++;\r\n    }\r\n    if(roundedSeconds < 10) {\r\n      pad = \"0\";\r\n    }\r\n    var decimalLength = roundedSeconds.toString().replace(/^[0-9]+/, '').length;\r\n    if(decimalLength == 0) {\r\n      decimalPad = \".00\";\r\n    }\r\n    else if(decimalLength == 2) {\r\n      decimalPad = \"0\";\r\n    }\r\n    return minutes + \":\" + pad + roundedSeconds + decimalPad;\r\n  };\r\n  \r\n  ////////////////////////////////////\r\n  //\r\n  //       PLAYING TRACKS\r\n  //\r\n  ////////////////////////////////////\r\n  \r\n  // function to start playing a track by index\r\n  playTrack = function (index) {\r\n    stopPlaying();\r\n    audioElement.remove();\r\n    audioElement = document.createElement('audio');\r\n    //audioElement.removeEventListener('ended', trackEnded(index), false);\r\n    audioElement.setAttribute('src', URL.createObjectURL(audioFiles[index].file));\r\n    audioElement.addEventListener('ended', function() {\r\n      trackEnded(index);\r\n    }, false);\r\n    audioElement.play();\r\n    $('#control'+index).html(buildStopButtonImage(index));\r\n    currentlyPlaying = index;\r\n  };\r\n  \r\n  // function called by clicking on play button for a specific track\r\n  clickPlayTrack = function (index) {\r\n    // don't allow click to play if currently playing whole side\r\n    if(!isPlayingSide) {\r\n      playTrack(index);\r\n    }\r\n  };\r\n  \r\n  stopPlaying = function () {\r\n    if(currentlyPlaying > -1) {\r\n      audioElement.pause();\r\n      audioElement.currentTime = 0;\r\n      $('#control'+currentlyPlaying).html(buildPlayButtonImage(currentlyPlaying));\r\n      currentlyPlaying = -1;\r\n      isPlayingSide = false;\r\n    }\r\n  };\r\n  \r\n  // function called by clicking on stop button for a specific track\r\n  clickStopPlaying = function () {\r\n    // don't allow click to stop if currently playing whole side\r\n    if(!isPlayingSide) {\r\n      stopPlaying();\r\n    }\r\n  };\r\n  \r\n  // call when a track ends to update button and stuff\r\n  // TODO: will be used to trigger time wait and next playing track\r\n  trackEnded = function (index) {\r\n    if(currentlyPlaying == index) {\r\n      console.log(\"track ended: \" + index);\r\n      $('#control'+index).html(buildPlayButtonImage(index));\r\n      currentlyPlaying = -1;\r\n      if(isPlayingSide) {\r\n        currentTrack++;\r\n        if(currentTrack >= sideTracks.length) {\r\n          // just finished last track, don't wait for silence between tracks\r\n          // call playNext immediately to initiate end of playing\r\n          playNext();\r\n        }\r\n        else {\r\n          // wait and then play the next track\r\n          setTimeout(function() {\r\n            playNext();\r\n          }, Math.max((secondsSilence * 1000) - currentTimeOffset, 0));\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      console.log(\"leftover event listener that should have been removed\");\r\n      // leftover event listener that should have been removed\r\n    }\r\n  };\r\n  \r\n  playSideA = function () {\r\n    if(!isPlayingSide && audioFiles.length > 0 && currentlyPlaying == -1) {\r\n      console.log(\"playing side A with number of tracks: \" + bestSolution.trackIdsA.length);\r\n      currentSide = \"A\";\r\n      sideTracks = bestSolution.trackIdsA;\r\n      times = timesSideA;\r\n      endTime = endTimeA;\r\n      currentTrack = 0;\r\n      currentTimeOffset = 0;\r\n      currentFillWidth = parseInt($('#tapeFilledBarA').css(\"width\").replace('px', ''));\r\n      $('#playSideA').hide();\r\n      $('#stopSideA').show();\r\n      isPlayingSide = true;\r\n      startTime = window.performance.now();\r\n      //startTime = new Date();\r\n      \r\n      setTimeout(function() {\r\n        playNext();\r\n      }, secondsPaddingStart * 1000);\r\n    }\r\n  };\r\n  \r\n  playSideB = function () {\r\n    if(!isPlayingSide && audioFiles.length > 0 && currentlyPlaying == -1) {\r\n      console.log(\"playing side B with number of tracks: \" + bestSolution.trackIdsB.length);\r\n      currentSide = \"B\";\r\n      sideTracks = bestSolution.trackIdsB;\r\n      times = timesSideB;\r\n      endTime = endTimeB;\r\n      currentTrack = 0;\r\n      currentTimeOffset = 0;\r\n      currentFillWidth = parseInt($('#tapeFilledBarB').css(\"width\").replace('px', ''));\r\n      $('#playSideB').hide();\r\n      $('#stopSideB').show();\r\n      isPlayingSide = true;\r\n      startTime = window.performance.now();\r\n      \r\n      setTimeout(function() {\r\n        playNext();\r\n      }, secondsPaddingStart * 1000);\r\n    }\r\n  };\r\n  \r\n  stopSideA = function () {\r\n    stopPlayingSide();\r\n  };\r\n  \r\n  stopSideB = function () {\r\n    stopPlayingSide();\r\n  };\r\n  \r\n  playNext = function () {\r\n    if(isPlayingSide) {\r\n      var currentTime = window.performance.now() - startTime;\r\n      var expectedTime = times[currentTrack];\r\n      var difference = currentTime - expectedTime;\r\n      currentTimeOffset = difference;\r\n      console.log(\"playing currentTrack: \" + currentTrack + \" of \" + sideTracks.length);\r\n      if(currentTrack < sideTracks.length) {\r\n        console.log(\"playing track: \" + audioFiles[sideTracks[currentTrack]].file.name);\r\n        console.log(\"start time: \" + currentTime + \", expected start time: \" + times[currentTrack] + \", difference: \" + difference);\r\n        playTrack(sideTracks[currentTrack]);\r\n      }\r\n      else {\r\n        // done playing, wait for end time\r\n        console.log(\"done playing, waiting for end padding... currentTime: \" + currentTime);\r\n        setTimeout(function() {\r\n          stopPlayingSide();\r\n        }, secondsPaddingEnd * 1000);\r\n      }\r\n    }\r\n  };\r\n  \r\n  stopPlayingSide = function () {\r\n    if(isPlayingSide) {\r\n      var currentTime = window.performance.now() - startTime;\r\n      console.log(\"stopped playing at: \" + currentTime);\r\n      $('#control'+currentlyPlaying).html(buildPlayButtonImage(currentlyPlaying));\r\n      isPlayingSide = false;\r\n      currentSide = \"\";\r\n      sideTracks = [];\r\n      times = [];\r\n      endTime = 0;\r\n      currentTrack = 0;\r\n      currentTimeOffset = 0;\r\n      currentFillWidth = 0;\r\n      $('#playSideA').show();\r\n      $('#stopSideA').hide();\r\n      $('#playSideB').show();\r\n      $('#stopSideB').hide();\r\n      audioElement.pause();\r\n      audioElement.currentTime = 0;\r\n      currentlyPlaying = -1;\r\n      $('#timerA').text(formatTimeDecimal(0));\r\n      $('#timerB').text(formatTimeDecimal(0));\r\n      $('#tapePositionA').css('margin-left', '');\r\n      $('#tapePositionB').css('margin-left', '');\r\n    }\r\n  };\r\n  \r\n  hideControlButtons = function () {\r\n    $('#playSideA').hide();\r\n    $('#stopSideA').hide();\r\n    $('#playSideB').hide();\r\n    $('#stopSideB').hide();\r\n  };\r\n  \r\n  // update timer display\r\n  var timerDisplay = setInterval(function () {\r\n    if(isPlayingSide) {\r\n      var currentTime = window.performance.now() - startTime;\r\n      //console.log(currentTime);\r\n      // don't allow displayed time to go higher than end time displayed for the side\r\n      var displayTime = Math.min(currentTime/1000, endTime);\r\n      $('#timer'+getSide()).text(formatTimeDecimal(displayTime));\r\n      \r\n      // update progress bar\r\n      var percentDone = Math.min((currentTime/1000) / endTime, 1);\r\n      $('#tapePosition'+getSide()).css('margin-left', percentDone * currentFillWidth);\r\n    }\r\n  }, 50);\r\n\r\n  getSide = function () {\r\n    if(isPlayingSide) {\r\n      return currentSide;\r\n    }\r\n    return \"\";\r\n  };\r\n  \r\n  moveTrackUp = function (index) {\r\n    if(!isPlayingSide && index < audioFiles.length && bestSolution.trackIdsA.length > 0) {\r\n      var moved = false;\r\n      var trackPositionA = bestSolution.trackIdsA.indexOf(index);\r\n      var trackPositionB = bestSolution.trackIdsB.indexOf(index);\r\n      if(trackPositionA > 0) {\r\n        // only move up if track is in list (not -1) and not the first element (not 0)\r\n        \r\n        // set current element (value is input index) to previous element value\r\n        bestSolution.trackIdsA[trackPositionA] = bestSolution.trackIdsA[trackPositionA - 1];\r\n        \r\n        // set previous element value to input index\r\n        bestSolution.trackIdsA[trackPositionA - 1] = index;\r\n        \r\n        moved = true;\r\n      }\r\n      else if(trackPositionB > 0) {\r\n        bestSolution.trackIdsB[trackPositionB] = bestSolution.trackIdsB[trackPositionB - 1];\r\n        bestSolution.trackIdsB[trackPositionB - 1] = index;\r\n        moved = true;\r\n      }\r\n      \r\n      if(moved) {\r\n        displaySolution(bestSolution);\r\n      }\r\n    }\r\n  };\r\n  \r\n  moveTrackDown = function (index) {\r\n    if(!isPlayingSide && index < audioFiles.length && bestSolution.trackIdsA.length > 0) {\r\n      var moved = false;\r\n      var trackPositionA = bestSolution.trackIdsA.indexOf(index);\r\n      var trackPositionB = bestSolution.trackIdsB.indexOf(index);\r\n      if(trackPositionA > -1 && trackPositionA < bestSolution.trackIdsA.length - 1) {\r\n        // only move down if track is in list (not -1) and not the last element (not length - 1)\r\n        \r\n        // set current element (value is input index) to next element value\r\n        bestSolution.trackIdsA[trackPositionA] = bestSolution.trackIdsA[trackPositionA + 1];\r\n        \r\n        // set next element value to input index\r\n        bestSolution.trackIdsA[trackPositionA + 1] = index;\r\n        \r\n        moved = true;\r\n      }\r\n      else if(trackPositionB > -1 && trackPositionB < bestSolution.trackIdsB.length - 1) {\r\n        bestSolution.trackIdsB[trackPositionB] = bestSolution.trackIdsB[trackPositionB + 1];\r\n        bestSolution.trackIdsB[trackPositionB + 1] = index;\r\n        moved = true;\r\n      }\r\n      \r\n      if(moved) {\r\n        displaySolution(bestSolution);\r\n      }\r\n    }\r\n  };\r\n  \r\n  \r\n  ////////////////////////////////////\r\n  //\r\n  //       BRUTE FORCE LOGIC\r\n  //\r\n  ////////////////////////////////////\r\n  \r\n  // may want to add wasted time property\r\n  function Solution () {\r\n    this.trackIdsA = [];\r\n    this.trackIdsB = [];\r\n    this.duration = 0;\r\n  }\r\n  \r\n  optimize = function () {\r\n    if(audioFiles.length > 0) {\r\n      secondsSideA = parseInt($('#minutesSideA').val()*100) * 60 / 100;\r\n      secondsSideB = parseInt($('#minutesSideB').val()*100) * 60 / 100;\r\n      secondsSilence = Math.max(parseInt($('#secondsSilence').val()), minimumSilence);\r\n      secondsPaddingStart = parseInt($('#secondsPaddingStart').val());\r\n      secondsPaddingEnd = parseInt($('#secondsPaddingEnd').val());\r\n      maxTrackCount = getMaxTrackCount();\r\n      minTrackCount = getMinTrackCount();\r\n      solutionThreshold = parseInt($('#secondsThreshold').val());\r\n      ignoreStupidSolutions = $('#stupidCheckbox').prop(\"checked\");\r\n      \r\n      var maxSolutions = 0;\r\n      var stupidSolutions = 0;\r\n      \r\n      if(minTrackCount == audioFiles.length) {\r\n        // all tracks can fit on side 1\r\n        bestSolution = getAllSolution();\r\n      }\r\n      else if(audioFiles.length > 20) {\r\n        // too many solutions to try them all, using random mode\r\n        maxSolutions = 1000000;\r\n        bestSolution = getSolutionById(0);\r\n        for(var i = 0; i < maxSolutions; i++) {\r\n          var solutionId = Math.random() * Math.pow(2, audioFiles.length);\r\n          if(!isStupidSolution(solutionId)) {\r\n            var solution = getSolutionById(solutionId);\r\n            if(solution.duration > bestSolution.duration && solution.duration <= secondsSideA) {\r\n              bestSolution = solution;\r\n              if(solution.duration >= secondsSideA - solutionThreshold) {\r\n                console.log(\"stopping after \" + i + \" iterations out of \" + maxSolutions);\r\n                i = maxSolutions;\r\n              }\r\n            }\r\n          }\r\n          else {\r\n            stupidSolutions++;\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        // brute forcing all solutions (up to 2^20=1048576 iterations)\r\n        maxSolutions = Math.pow(2, audioFiles.length);\r\n        bestSolution = getSolutionById(0);\r\n\r\n        for(var i = 0; i < maxSolutions; i++) {\r\n          if(!isStupidSolution(i)) {\r\n            var solution = getSolutionById(i);\r\n            if(solution.duration > bestSolution.duration && solution.duration <= secondsSideA) {\r\n              bestSolution = solution;\r\n              if(solution.duration >= secondsSideA - solutionThreshold) {\r\n                console.log(\"stopping after \" + i + \" iterations out of \" + maxSolutions);\r\n                i = maxSolutions;\r\n              }\r\n            }\r\n          }\r\n          else {\r\n            stupidSolutions++;\r\n          }\r\n        }\r\n      }\r\n      console.log(\"Best Solution: \" + formatTimeDecimal(bestSolution.duration) + \" (\" + bestSolution.duration + \")\");\r\n      if(ignoreStupidSolutions) {\r\n        console.log(\"Stupid solutions eliminated: \" + stupidSolutions);\r\n      }\r\n      //print solution\r\n      displaySolution(bestSolution);\r\n      $('#results').show();\r\n    }\r\n  };\r\n  \r\n  // takes integer number\r\n  // creates solution matching binary representation of tracks\r\n  getSolutionById = function (id) {\r\n    var solution = new Solution();\r\n    // 5 -> 101 -> tracks 1, 3\r\n    var binary = parseInt(id).toString(2);\r\n    \r\n    for(; binary.length < audioFiles.length;) {\r\n      binary = \"0\" + binary;\r\n    }\r\n    \r\n    var j = 0;\r\n    for(var i = binary.length - 1; i >= 0; i--) {\r\n      var current = binary.charAt(i);\r\n      if(current == \"1\") {\r\n        solution.trackIdsA.push(j);\r\n      }\r\n      else {\r\n        solution.trackIdsB.push(j);\r\n      }\r\n      j++;\r\n    }\r\n    \r\n    calculateDuration(solution);\r\n    \r\n    return solution;\r\n  };\r\n  \r\n  getAllSolution = function () {\r\n    var solution = new Solution();\r\n    $.each(audioFiles, function (i, data) {\r\n      solution.trackIdsA.push(i);\r\n    });\r\n    \r\n    calculateDuration(solution);\r\n    return solution;\r\n  };\r\n  \r\n  // takes a solution, reads tracks on side A and saves duration to solution\r\n  calculateDuration = function (solution) {\r\n    var totalDuration = 0;\r\n    \r\n    // add in silence at start and end of tape\r\n    totalDuration += secondsPaddingStart + secondsPaddingEnd;\r\n    \r\n    // add in silence between tracks\r\n    totalDuration += secondsSilence * (solution.trackIdsA.length - 1);\r\n    \r\n    // add total track duration\r\n    $.each(solution.trackIdsA, function (i, data) {\r\n      totalDuration += audioFiles[data].duration;\r\n    });\r\n    \r\n    // set solution duration to calculated duration\r\n    solution.duration = totalDuration;\r\n  };\r\n  \r\n  // returns true if this ID has more \"1\"s than the max possible or fewer than the min\r\n  isStupidSolution = function (id) {\r\n    if(ignoreStupidSolutions) {\r\n      // check if too many or too few tracks\r\n      \r\n      // fast regex solution\r\n      var binary = parseInt(id).toString(2);\r\n      const pattern = new RegExp('^0*(10*){'+minTrackCount+','+maxTrackCount+'}$');\r\n      return !pattern.test(binary);\r\n\r\n      // slooooooow\r\n      //var numTracks = (binary.split(\"1\").length - 1);\r\n      //return (numTracks > maxTrackCount || numTracks < minTrackCount);\r\n    }\r\n    return false;\r\n  };\r\n  \r\n  clearSolution = function () {\r\n    $('#resultSection').empty();\r\n    $('#resultSectionA').empty();\r\n    $('#resultSectionB').empty();\r\n    var header = \"<tr><th>Track Name</th><th>Duration</th><th>Side</th></tr>\";\r\n    var headerAB = \"<tr><th></th><th>Track Name</th><th>Duration</th></tr>\";\r\n    $('#resultSection').append(header);\r\n    $('#resultSectionA').append(headerAB);\r\n    $('#resultSectionB').append(headerAB);\r\n    sideA = [];\r\n    sideB = [];\r\n    timesSideA = [];\r\n    timesSideB = [];\r\n    endTimeA = 0;\r\n    endTimeB = 0;\r\n    endTime = 0;\r\n  };\r\n  \r\n  displaySolution = function (solution) {\r\n    clearSolution();\r\n    \r\n    var durationSideB = 0;\r\n    \r\n    $.each(solution.trackIdsA, function (i, data) {\r\n      var track = audioFiles[data];\r\n      \r\n      //var arrows = '<span class=\"upArrow unselectable\" onclick=\"moveTrackUp('+data+');\">UP</span><span class=\"downArrow unselectable\" onclick=\"moveTrackDown('+data+');\">DN</span>';\r\n      var arrows = '<span class=\"unselectable\">' + buildUpArrowImage(data, i==0) + buildDownArrowImage(data, i==solution.trackIdsA.length-1) + '</span>';\r\n      var dur = formatTimeDecimal(track.duration);\r\n      //var row = \"<tr><td>\"+arrows+\"</td><td>\"+track.name+\"</td><td>\"+dur+\"</td><td>\"+side+\"</td></tr>\";\r\n      //$('#resultSection').append(row);\r\n      \r\n      var splitRow = \"<tr><td>\"+arrows+\"</td><td>\"+track.name+\"</td><td>\"+dur+\"</td></tr>\";\r\n      $('#resultSectionA').append(splitRow);\r\n      sideA.push(i);\r\n    });\r\n    \r\n    $.each(solution.trackIdsB, function (i, data) {\r\n      var track = audioFiles[data];\r\n      \r\n      durationSideB += track.duration;\r\n      //var arrows = '<span onclick=\"moveTrackUp('+data+');\">UP</span>';\r\n      var arrows = '<span class=\"unselectable\">' + buildUpArrowImage(data, i==0) + buildDownArrowImage(data, i==solution.trackIdsB.length-1) + '</span>';\r\n      var dur = formatTimeDecimal(track.duration);\r\n      //var row = \"<tr><td>\"+arrows+\"</td><td>\"+track.name+\"</td><td>\"+dur+\"</td><td>\"+side+\"</td></tr>\";\r\n      //$('#resultSection').append(row);\r\n      \r\n      var splitRow = \"<tr><td>\"+arrows+\"</td><td>\"+track.name+\"</td><td>\"+dur+\"</td></tr>\";\r\n      $('#resultSectionB').append(splitRow);\r\n      sideB.push(i);\r\n    });\r\n    /*\r\n    $.each(audioFiles, function (i, data) {\r\n      var side = \"B\";\r\n      if(solution.trackIdsA.indexOf(i) != -1) {\r\n        side = \"A\";\r\n      }\r\n      else {\r\n        durationSideB += data.duration;\r\n      }\r\n      var arrows = '<span onclick=\"moveTrackUp('+i+');\">UP</span>';\r\n      var dur = formatTimeDecimal(data.duration);\r\n      var row = \"<tr><td>\"+arrows+\"</td><td>\"+data.name+\"</td><td>\"+dur+\"</td><td>\"+side+\"</td></tr>\";\r\n      $('#resultSection').append(row);\r\n      \r\n      var splitRow = \"<tr><td>\"+data.name+\"</td><td>\"+dur+\"</td></tr>\";\r\n      if(side == \"A\") {\r\n        $('#resultSectionA').append(splitRow);\r\n        sideA.push(i);\r\n      }\r\n      else {\r\n        $('#resultSectionB').append(splitRow);\r\n        sideB.push(i);\r\n      }\r\n    });*/\r\n    \r\n    timesSideA = calculateTrackTimes(solution.trackIdsA);\r\n    timesSideB = calculateTrackTimes(solution.trackIdsB);\r\n    \r\n    endTimeA = solution.duration;\r\n    endTimeB = durationSideB;\r\n    \r\n    $('#titleSideA').text(\"Side A - \" + bestSolution.trackIdsA.length + \" Track\" + (bestSolution.trackIdsA.length != 1 ? \"s\":\"\") + \" - \" + formatTimeDecimal(endTimeA));\r\n    $('#titleSideB').text(\"Side B - \" + bestSolution.trackIdsB.length + \" Track\" + (bestSolution.trackIdsB.length != 1 ? \"s\":\"\") + \" - \" + formatTimeDecimal(endTimeB));\r\n    \r\n    var percentFullA = endTimeA / secondsSideA;\r\n    var percentFullB = endTimeB / secondsSideB;\r\n    \r\n    console.log(\"percent full side A: \" + percentFullA);\r\n    \r\n    // update width of bar to show how full the tape is\r\n    $('#tapeFilledBarA').css(\"width\", percentFullA * 300);\r\n    $('#tapeFilledBarB').css(\"width\", percentFullB * 300);\r\n    \r\n    // show play buttons\r\n    if(solution.trackIdsA.length > 0) {\r\n      $('#playSideA').show();\r\n    }\r\n    if(solution.trackIdsB.length > 0) {\r\n      $('#playSideB').show();\r\n    }\r\n    \r\n    $('#resultCombined').hide();\r\n  };\r\n  \r\n  // calculates expected start time in millis since pressing play side\r\n  calculateTrackTimes = function (tracks) {\r\n    var result = [];\r\n    var time = 0; // adds up for each track\r\n    time += (secondsPaddingStart * 1000);\r\n    $.each(tracks, function (i, trackIndex) {\r\n      result.push(time);\r\n      time += (audioFiles[trackIndex].duration * 1000);\r\n      time += (secondsSilence * 1000);\r\n    });\r\n    return result;\r\n  };\r\n  \r\n  getMinTrackCount = function () {\r\n    var sortedTracks = audioFiles.slice().sort(compareTracks);\r\n    console.log(\"sorting tracks largest to smallest\");\r\n    var totalSeconds = 0;\r\n    totalSeconds += secondsPaddingStart + secondsPaddingEnd;\r\n    var maxSeconds = secondsSideA;\r\n    var i = 0;\r\n    for(; i < sortedTracks.length && totalSeconds < maxSeconds; i++) {\r\n      //console.log(\"sorted track duration: \" + sortedTracks[i].duration);\r\n      totalSeconds += sortedTracks[i].duration;\r\n      if(i > 0) {\r\n        totalSeconds += secondsSilence;\r\n      }\r\n    }\r\n    if(totalSeconds < maxSeconds) {\r\n      console.log(\"min number of tracks: \" + sortedTracks.length);\r\n      return sortedTracks.length;\r\n    }\r\n    else {\r\n      console.log(\"min number of tracks: \" + (i-1));\r\n      return (i-1);\r\n    }\r\n  };\r\n  \r\n  getMaxTrackCount = function () {\r\n    var sortedTracks = audioFiles.slice().sort(compareTracks).reverse();\r\n    console.log(\"sorting tracks smallest to largest\");\r\n    var totalSeconds = 0;\r\n    totalSeconds += secondsPaddingStart + secondsPaddingEnd;\r\n    var maxSeconds = secondsSideA;\r\n    var i = 0;\r\n    for(; i < sortedTracks.length && totalSeconds < maxSeconds; i++) {\r\n      //console.log(\"sorted track duration: \" + sortedTracks[i].duration);\r\n      totalSeconds += sortedTracks[i].duration;\r\n      if(i > 0) {\r\n        totalSeconds += secondsSilence;\r\n      }\r\n    }\r\n    if(totalSeconds < maxSeconds) {\r\n      console.log(\"min number of tracks: \" + sortedTracks.length);\r\n      return sortedTracks.length;\r\n    }\r\n    else {\r\n      console.log(\"max number of tracks: \" + (i-1));\r\n      return (i-1);\r\n    }\r\n  };\r\n  \r\n  // sorting tracks by length\r\n  compareTracks = function (a, b) {\r\n    return b.duration - a.duration;\r\n  };\r\n  \r\n  hideControlButtons();\r\n});\r\n","hostingProvider":"unifile","twitterSocial":null,"dataSources":{},"fonts":[{"family":"'Roboto', sans-serif","href":"https://fonts.googleapis.com/css?family=Roboto"}],"styles":{"all-style":{"className":"all-style","templateName":"text","displayName":"All style","styles":{"desktop":{"normal":{"className":"all-style","pseudoClass":"normal","All":{"font-family":"'Roboto', sans-serif"}}}}}},"isTemplate":false,"file":{"name":"editable.html","folder":"Downloads/TapeDeck-20210911T235612Z-001/TapeDeck","path":"Downloads/TapeDeck-20210911T235612Z-001/TapeDeck/editable.html","service":"fs","url":"http://localhost:6805/ce/fs/get/Downloads/TapeDeck-20210911T235612Z-001/TapeDeck/editable.html","absPath":"/ce/fs/get/Downloads/TapeDeck-20210911T235612Z-001/TapeDeck/editable.html"},"prodotypeDependencies":{},"data":{}},"pages":[{"id":"page-page-1","displayName":"Page 1","link":{"linkType":"LinkTypePage","href":"#!page-page-1"},"canDelete":true,"canProperties":true,"canMove":true,"canRename":true,"opened":false}],"elements":[{"id":"body-initial","pageNames":[],"classList":[],"type":"container-element","isSectionContent":false,"title":"","alt":null,"children":["silex-id-1478366444112-1","silex-id-1474394621033-3","silex-id-1478366450713-3"],"link":null,"enableEdit":false,"enableDrag":false,"enableDrop":true,"enableResize":{"top":false,"bottom":false,"left":false,"right":false},"selected":false,"useMinHeight":true,"visibility":{"desktop":true,"mobile":true},"style":{"desktop":{"background-color":"rgba(46,32,55,1)","position":"static"},"mobile":{}},"data":{"component":null},"innerHtml":"","tagName":"BODY"},{"id":"silex-id-1478366444112-1","pageNames":[],"classList":[],"type":"section-element","isSectionContent":false,"title":"","alt":null,"children":["silex-id-1478366444112-0"],"link":null,"enableEdit":false,"enableDrag":true,"enableDrop":true,"enableResize":{"top":false,"bottom":false,"left":false,"right":false},"selected":false,"useMinHeight":true,"visibility":{"desktop":true,"mobile":true},"style":{"desktop":{"background-color":"transparent","position":"static","margin-top":"-1px"},"mobile":{}},"data":{"component":null},"innerHtml":"","tagName":"SECTION"},{"id":"silex-id-1478366444112-0","pageNames":[],"classList":["website-width"],"type":"container-element","isSectionContent":true,"title":"","alt":null,"children":["silex-id-1631411431091-0"],"link":null,"enableEdit":false,"enableDrag":false,"enableDrop":true,"enableResize":{"top":true,"bottom":true,"left":true,"right":true},"selected":false,"useMinHeight":true,"visibility":{"desktop":true,"mobile":true},"style":{"desktop":{"background-color":"transparent","height":"433px","position":"relative","margin-left":"auto","margin-right":"auto"},"mobile":{}},"data":{"component":null},"innerHtml":"","tagName":"DIV"},{"id":"silex-id-1474394621033-3","pageNames":[],"classList":[],"type":"section-element","isSectionContent":false,"title":"","alt":null,"children":["silex-id-1474394621032-2"],"link":null,"enableEdit":false,"enableDrag":true,"enableDrop":true,"enableResize":{"top":false,"bottom":false,"left":false,"right":false},"selected":false,"useMinHeight":true,"visibility":{"desktop":true,"mobile":true},"style":{"desktop":{"position":"static","margin-top":"-1px"},"mobile":{}},"data":{"component":null},"innerHtml":"","tagName":"SECTION"},{"id":"silex-id-1474394621032-2","pageNames":[],"classList":["website-width"],"type":"container-element","isSectionContent":true,"title":"","alt":null,"children":["silex-id-1631459713093-2","silex-id-1631460819517-4"],"link":null,"enableEdit":false,"enableDrag":false,"enableDrop":true,"enableResize":{"top":true,"bottom":true,"left":true,"right":true},"selected":false,"useMinHeight":true,"visibility":{"desktop":true,"mobile":true},"style":{"desktop":{"background-color":"transparent","height":"600px","position":"relative","margin-left":"auto","margin-right":"auto"},"mobile":{}},"data":{"component":null},"innerHtml":"","tagName":"DIV"},{"id":"silex-id-1478366450713-3","pageNames":[],"classList":[],"type":"section-element","isSectionContent":false,"title":"","alt":null,"children":["silex-id-1478366450713-2"],"link":null,"enableEdit":false,"enableDrag":true,"enableDrop":true,"enableResize":{"top":false,"bottom":false,"left":false,"right":false},"selected":false,"useMinHeight":true,"visibility":{"desktop":true,"mobile":true},"style":{"desktop":{"background-color":"transparent","position":"static","margin-top":"-1px"},"mobile":{}},"data":{"component":null},"innerHtml":"","tagName":"SECTION"},{"id":"silex-id-1478366450713-2","pageNames":[],"classList":["website-width"],"type":"container-element","isSectionContent":true,"title":"","alt":null,"children":["silex-id-1442914737143-3"],"link":null,"enableEdit":false,"enableDrag":false,"enableDrop":true,"enableResize":{"top":true,"bottom":true,"left":true,"right":true},"selected":false,"useMinHeight":true,"visibility":{"desktop":true,"mobile":true},"style":{"desktop":{"background-color":"transparent","height":"100px","position":"relative","margin-left":"auto","margin-right":"auto"},"mobile":{}},"data":{"component":null},"innerHtml":"","tagName":"DIV"},{"id":"silex-id-1442914737143-3","pageNames":[],"classList":[],"type":"text-element","isSectionContent":false,"title":"","alt":null,"children":[],"link":null,"enableEdit":true,"enableDrag":true,"enableDrop":false,"enableResize":{"top":true,"bottom":true,"left":true,"right":true},"selected":false,"useMinHeight":true,"visibility":{"desktop":true,"mobile":true},"style":{"desktop":{"width":"241px","top":"26px","left":"494px","height":"51px","position":"absolute"},"mobile":{}},"data":{"component":null},"innerHtml":"<p>Powered by <a href=\"https://www.silex.me/\" target=\"_blank\" title=\"Silex website builder,  free and open source\" linktype=\"LinkTypeExternal\">Silex website builder</a></p>","tagName":"DIV"},{"id":"silex-id-1631411431091-0","tagName":"DIV","type":"image-element","alt":null,"title":null,"isSectionContent":false,"visibility":{"desktop":true,"mobile":true},"style":{"mobile":{},"desktop":{"width":"352px","height":"221px","position":"static","background-color":"transparent","padding-left":"","padding-right":""}},"data":{"component":null},"children":[],"pageNames":["page-page-1"],"classList":[],"link":null,"enableEdit":true,"enableDrag":true,"enableDrop":false,"enableResize":{"top":true,"bottom":true,"left":true,"right":true},"selected":false,"useMinHeight":false,"innerHtml":"<img src=\"/ce/fs/get/Downloads/TapeDeck-20210911T235612Z-001/TapeDeck/cassette-2760483_1920.png\" />"},{"id":"silex-id-1631459713093-2","tagName":"DIV","type":"html-element","alt":null,"title":null,"isSectionContent":false,"visibility":{"desktop":true,"mobile":true},"style":{"mobile":{},"desktop":{"width":"908px","height":"190px","background-color":"rgb(255, 255, 255)","position":"absolute","top":"386px","left":"-1.34356689453125px"}},"data":{"component":null},"children":[],"pageNames":["page-page-1"],"classList":[],"link":null,"enableEdit":true,"enableDrag":true,"enableDrop":false,"enableResize":{"top":true,"bottom":true,"left":true,"right":true},"selected":false,"useMinHeight":true,"innerHtml":"<div>\r\n        <input type=\"file\" multiple id=\"fileInput\">\r\n        <button id=\"upload\" onclick=\"upload();\">Upload Tracks</button>\r\n</div>\r\n\r\n<div class=\"padded10\">\r\n    <label>Tape Length:</label>\r\n        <select name=\"cars\" id=\"cars\">\r\n            <option value=\"60\">C60</option>\r\n            <option value=\"90\">C90</option>\r\n            <option value=\"100\">C100</option>\r\n            <option value=\"110\">C110</option>\r\n            <option value=\"120\">C120</option>\r\n        </select>\r\n</div>\r\n\r\n<div class=\"padded10\">\r\n    <label>Side B Length (minutes):</label>\r\n    <input type=\"number\" id=\"minutesSideB\" value=\"45\" min=\"0\" style=\"width: 40px;\"></input>\r\n</div>\r\n\r\n<div class=\"padded10\">\r\n    <label>Padding at Start of Tape (seconds):</label>\r\n    <input type=\"number\" id=\"secondsPaddingStart\" value=\"0\" min=\"0\" style=\"width: 40px;\"></input>\r\n</div>\r\n\r\n<div class=\"padded10\">\r\n    <label>Padding at End of Tape (seconds):</label>\r\n    <input type=\"number\" id=\"secondsPaddingEnd\" value=\"0\" min=\"0\" style=\"width: 40px;\"></input>\r\n</div>\r\n\r\n<div class=\"padded10\">\r\n    <label>Threshold for \"good enough\" solution (seconds):</label>\r\n    <input type=\"number\" id=\"secondsThreshold\" value=\"5\" min=\"0\" style=\"width: 40px;\"></input>\r\n    <label class=\"small\"><i>Note: set to 0 to force optimal up to 1M iterations (may affect performance!)</i></label>\r\n</div>\r\n\r\n<label for=\"stupidCheckbox\">Ignore Stupid Solutions</label>\r\n    <input type=\"checkbox\" name=\"stupidCheckbox\" id=\"stupidCheckbox\">\r\n</div>"},{"id":"silex-id-1631460819517-4","tagName":"DIV","type":"html-element","alt":null,"title":null,"isSectionContent":false,"visibility":{"desktop":true,"mobile":true},"style":{"mobile":{},"desktop":{"width":"1200px","height":"573px","background-color":"rgb(255, 255, 255)","position":"absolute","top":"-207px","left":"-1.34356689453125px"}},"data":{"component":null},"children":[],"pageNames":["page-page-1"],"classList":[],"link":null,"enableEdit":true,"enableDrag":true,"enableDrop":false,"enableResize":{"top":true,"bottom":true,"left":true,"right":true},"selected":false,"useMinHeight":true,"innerHtml":"<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <title>Cassette Tape Maker</title>\r\n    <link rel=\"shortcut icon\" type=\"image/ico\" href=\"favicon.ico\" />\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"tape.css\">\r\n  </head>\r\n  <body>\r\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js\"></script>\r\n    <!--<script type=\"text/javascript\" src=\"audio-metadata-0.3.0/audio-metadata.min.js\"></script>-->\r\n    <script src=\"tape.js\"></script>\r\n    <div class=\"wrapper\">\r\n    \r\n    <div class=\"content\">\r\n    <div class=\"titles\">\r\n    <div class=\"section topbanner\">\r\n      <div class=\"bannertext giant unselectable bold mono\">\r\n        Cassette Maker\r\n      </div>\r\n      <div class=\"bannerdesc medium unselectable mono\">\r\n        <i>Optimize Cassette Tapes</i>\r\n      </div>\r\n      <div class=\"dcopelogo bold mono red unselectable\">\r\n        <img src=\"andrewthomaspizza10.png\" alt=\"andrewthomaspizza\" style=\"width:200px;height:22px;\">\r\n      </div>\r\n      <div class=\"tapelogo bold mono red unselectable\">\r\n        <img src=\"favicon.ico\" alt=\"andrewthomaspizza\" style=\"width:100px;height:100px;\">\r\n      </div>\r\n    </div>\r\n    <div class=\"section\">\r\n      <div>\r\n        <input type=\"file\" multiple id=\"fileInput\">\r\n        <button id=\"upload\" onclick=\"upload();\">Upload Tracks</button>\r\n      </div>\r\n      <div class=\"padded10\">\r\n        <label>Side A Length (minutes):</label>\r\n        <input type=\"number\" id=\"minutesSideA\" value=\"45\" min=\"0\" style=\"width: 40px;\"></input>\r\n      </div>\r\n      <div class=\"padded10\">\r\n        <label>Side B Length (minutes):</label>\r\n        <input type=\"number\" id=\"minutesSideB\" value=\"45\" min=\"0\" style=\"width: 40px;\"></input>\r\n      </div>\r\n      <div class=\"padded10\">\r\n        <label>Time Between Each Track (seconds):</label>\r\n        <input type=\"number\" id=\"secondsSilence\" value=\"0\" min=\"0\" style=\"width: 40px;\"></input>\r\n        <label class=\"small\"><i>Note: minimum time is 0.1s</i></label>\r\n      </div>\r\n      <div class=\"padded10\">\r\n        <label>Padding at Start of Tape (seconds):</label>\r\n        <input type=\"number\" id=\"secondsPaddingStart\" value=\"0\" min=\"0\" style=\"width: 40px;\"></input>\r\n      </div>\r\n      <div class=\"padded10\">\r\n        <label>Padding at End of Tape (seconds):</label>\r\n        <input type=\"number\" id=\"secondsPaddingEnd\" value=\"0\" min=\"0\" style=\"width: 40px;\"></input>\r\n      </div>\r\n      <div class=\"padded10\">\r\n        <label>Threshold for \"good enough\" solution (seconds):</label>\r\n        <input type=\"number\" id=\"secondsThreshold\" value=\"5\" min=\"0\" style=\"width: 40px;\"></input>\r\n        <label class=\"small\"><i>Note: set to 0 to force optimal up to 1M iterations (may affect performance!)</i></label>\r\n      </div>\r\n      <label for=\"stupidCheckbox\">Ignore Stupid Solutions</label>\r\n      <input type=\"checkbox\" name=\"stupidCheckbox\" id=\"stupidCheckbox\">\r\n    </div>\r\n    <div class=\"section\">\r\n      <table id=\"fileListSection\">\r\n        <tr><th></th><th>Track Name</th><th>Duration</th><th></th></tr>\r\n      </table>\r\n      <div>\r\n        <button id=\"optimize\" onclick=\"optimize();\">Optimize</button>\r\n      </div>\r\n    </div>\r\n    <div id=\"results\">\r\n      <div id=\"resultCombined\" class=\"section\">\r\n        <div class=\"padded10\">\r\n          Optimized Tape Sides\r\n        </div>\r\n        <table id=\"resultSection\">\r\n          <tr><th>Track Name</th><th>Duration</th><th>Side</th></tr>\r\n        </table>\r\n      </div>\r\n      <div class=\"splitSection\">\r\n        <div id=\"resultSideA\" class=\"section\">\r\n          <div id=\"titleSideA\" class=\"bold medium\">Side A</div>\r\n          <div id=\"tapeSizeBarA\" class=\"progressBar\">\r\n            <div id=\"tapePositionA\" class=\"barPosition\"></div>\r\n            <div id=\"tapeFilledBarA\" class=\"filledBar\"></div>\r\n          </div>\r\n          <div class=\"tapeControls\">\r\n            <img id=\"playSideA\" src=\"play_button_green3.png\" alt=\"play\" onclick=\"playSideA();\" style=\"width:20px; height:20px;\">\r\n            <img id=\"stopSideA\" src=\"stop_button_red3.png\" alt=\"stop\" onclick=\"stopSideA();\" style=\"width:20px; height:20px;\">\r\n            <label id=\"timerA\" class=\"timer mono bold\">0:00.00</label>\r\n          </div>\r\n          <table id=\"resultSectionA\" class=\"trackListingTable\">\r\n            <tr><th>Track Name</th><th>Duration</th></tr>\r\n          </table>\r\n        </div>\r\n        <div id=\"resultSideB\" class=\"section\">\r\n          <div id=\"titleSideB\" class=\"bold medium\">Side B</div>\r\n          <div id=\"tapeSizeBarB\" class=\"progressBar\">\r\n            <div id=\"tapePositionB\" class=\"barPosition\"></div>\r\n            <div id=\"tapeFilledBarB\" class=\"filledBar\"></div>\r\n          </div>\r\n          <div class=\"tapeControls\">\r\n            <img id=\"playSideB\" src=\"play_button_green3.png\" alt=\"play\" onclick=\"playSideB();\" style=\"width:20px; height:20px;\">\r\n            <img id=\"stopSideB\" src=\"stop_button_red3.png\" alt=\"stop\" onclick=\"stopSideB();\" style=\"width:20px; height:20px;\">\r\n            <label id=\"timerB\" class=\"timer mono bold\">0:00.00</label>\r\n          </div>\r\n          <table id=\"resultSectionB\" class=\"trackListingTable\">\r\n            <tr><th>Order</th><th>Track Name</th><th>Duration</th></tr>\r\n          </table>\r\n        </div>\r\n        <br style=\"clear:both;\"/>\r\n      </div>\r\n    </div>\r\n    <div class=\"footer\">\r\n      <div>\r\n        <div class=\"unselectable\">\r\n          <br>This site is 100% ad-free. I use an ad blocker, and you should too.\r\n          <br>This page was designed to be viewed in Google Chrome. If you use another browser, <a target=\"_blank\" href=\"https://www.google.com/chrome/browser/\">click here to meet hot singles in your area</a>.\r\n        </div>\r\n        <div class=\"dcopelogo bold mono red unselectable\">\r\n          <img src=\"andrewthomaspizza10.png\" alt=\"andrewthomaspizza\" style=\"width:200px;height:22px;\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n    </div>\r\n  </body>\r\n</html>"}]}